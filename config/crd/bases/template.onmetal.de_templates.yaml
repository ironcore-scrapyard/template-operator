
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: templates.template.onmetal.de
spec:
  group: template.onmetal.de
  names:
    kind: Template
    listKind: TemplateList
    plural: templates
    singular: template
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: whether the template has been applied successfully
      jsonPath: .status.conditions[?(@.type == "Applied")].reason
      name: Applied
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Template is the Schema for the templates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TemplateSpec defines the desired state of Template
            properties:
              commonLabels:
                additionalProperties:
                  type: string
                description: CommonLabels are common labels that should be applied
                  for all resulting resources of this template.
                type: object
              data:
                description: TemplateData holds the definition of the template.
                properties:
                  configMapRef:
                    description: ConfigMapRef is the reference to a config map containing
                      the template. If key is not specified, it defaults to DefaultConfigMapTemplateKey.
                    properties:
                      key:
                        description: The key of the entry in the ConfigMap resource's
                          `data` field to be used. Some instances of this field may
                          be defaulted, in others it may be required.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  inline:
                    description: Inline is an inline template definition.
                    type: string
                type: object
              groupKinds:
                description: GroupKinds are metav1.GroupKinds that are produced by
                  this template.
                items:
                  description: GroupKind specifies a Group and a Kind, but does not
                    force a version.  This is useful for identifying concepts during
                    lookup stages without having partially valid types
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                type: array
              prune:
                description: Prune indicates whether to prune unused resources of
                  a template.
                type: boolean
              selector:
                description: Selector is a metav1.LabelSelector to select resources
                  produced by this template.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              sources:
                description: Sources is a list of TemplateSource to draw template
                  values from
                items:
                  description: TemplateSource is a source for the values of a template.
                  properties:
                    name:
                      description: Name is the name the source shall be registered
                        with in the values.
                      type: string
                    object:
                      description: ObjectReference is a reference to an object to
                        serve as source.
                      properties:
                        apiVersion:
                          description: APIVersion is the api version of the target
                            object to use.
                          type: string
                        kind:
                          description: Kind is the kind of the target object.
                          type: string
                        name:
                          description: Name is the name of the target object.
                          type: string
                        namespace:
                          description: Namespace is the namespace the target object
                            lives in.
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      type: object
                    value:
                      description: Value is a literal yaml value to use as source.
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  type: object
                type: array
            required:
            - data
            type: object
          status:
            description: TemplateStatus defines the observed state of Template
            properties:
              conditions:
                description: Conditions is a list of TemplateCondition referring to
                  individual state information of a Template.
                items:
                  description: TemplateCondition is a status information of an aspect
                    of a Template.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time a condition
                        transitioned between two statuses.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the last time a condition has
                        been updated.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable detailed explanation
                        of the condition reason.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the observed generation for
                        which a condition is reported.
                      format: int64
                      type: integer
                    reason:
                      description: Reason is a machine- and human-readable short explanation
                        of the condition.
                      type: string
                    status:
                      description: Status reports the status of the condition.
                      type: string
                    type:
                      description: Type is the TemplateConditionType of this condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - message
                  - observedGeneration
                  - reason
                  - status
                  - type
                  type: object
                type: array
              managedResources:
                description: ManagedResources are resources that are managed by this
                  template.
                items:
                  description: ObjectReference references an object in a specific
                    api version.
                  properties:
                    apiVersion:
                      description: APIVersion is the api version of the target object
                        to use.
                      type: string
                    kind:
                      description: Kind is the kind of the target object.
                      type: string
                    name:
                      description: Name is the name of the target object.
                      type: string
                    namespace:
                      description: Namespace is the namespace the target object lives
                        in.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
